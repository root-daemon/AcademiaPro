---
interface Props {
  title: string;
  code: string;
  percent: string;
  data: {
    present: number;
    absent: number;
    total: number;
  };
  category: "Theory" | "Practical" | string;
}

const { percent, title, code, data, category } = Astro.props;
---

<tr class="card">
  <td><h4>{title}</h4></td>
  <td
    ><span
      class={category == "Theory" ? "subject-code" : "subject-code practical"}
      >{code}</span
    ></td
  >

  <td>
    <div class="attendance">
      <span class="present green">{data.present}</span>
      <span class="absent red">{data.absent}</span>
      <span class="total">{data.total}</span>
    </div>
  </td>
  <td>
    <h3
      class={Number(percent.split(".")[0]) === 100
        ? "green"
        : Number(percent.split(".")[0]) < 75
          ? "red"
          : "percent"}
    >
      {percent}%
    </h3>
  </td>
</tr>

<style>
  .attendance {
    background-color: #04070b;
    border-radius: 50px;
    display: flex;
    gap: 8px;
    padding: 2px 2px 2px 12px;
    justify-content: space-between;
  }

  .total {
    background: #D4D4D4;
    padding: 0px 12px;
    border-radius: 50px;
    font-weight: 700;
    color: #0A0D12;

  }

  .card {
    width: -webkit-fill-available;
    background: transparent;
    border: 0px solid transparent;
    display: table-row;
    vertical-align: middle;
  }

  .card td {
    padding: 12px 16px;
  }

  .subject-code {
    background: #d4d4d4;
    padding: 0px 10px;
    font-family: "Inter";
    font-weight: 700;
    color: #0a0d12;
    border-radius: 50px;
  }

  .red {
    color: var(--red);
  }

  .percent,
  .red,
  .green {
    text-align: right;
    font-weight: 700;
  }

  .green {
    color: var(--green);
  }

  .card td:first-child {
    border-radius: 12px 0 0 12px;
  }

  .card td:last-child {
    border-radius: 0 12px 12px 0;
  }

  .practical {
    background: #70fa70 !important;
  }

  .card h4 {
    font-size: 16px;
    max-width: 300px;
  }

  .card:nth-child(2n + 1) td {
    background: #0a0d12;
  }

</style>
